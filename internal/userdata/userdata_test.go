package userdata

import (
	"os"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestLoginAndPassword(t *testing.T) {
	lpData := LoginAndPassword{
		Login:    "my_login",
		Password: "my_password"}
	assert.NotEmpty(t, lpData)

	bData, err := lpData.Bytes()
	assert.NoError(t, err)

	assert.Equal(t, bData, []byte{0x6d, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x3a, 0x6d, 0x79, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64})

}

func TestTextData(t *testing.T) {
	tData := TextData{
		Text: "my_text"}
	assert.NotEmpty(t, tData)

	bData, err := tData.Bytes()
	assert.NoError(t, err)

	assert.Equal(t, bData, []byte{0x6d, 0x79, 0x5f, 0x74, 0x65, 0x78, 0x74})

}

func TestCreditCard(t *testing.T) {
	creditData := CreditCard{
		Number:         "1234555566667777888899",
		ExpirationDate: "06/24",
		CVC:            "123"}
	assert.NotEmpty(t, creditData)

	bData, err := creditData.Bytes()
	assert.NoError(t, err)

	assert.Equal(t, bData, []byte{0x31, 0x32, 0x33, 0x34, 0x35, 0x35, 0x35, 0x35, 0x36, 0x36, 0x36, 0x36, 0x37, 0x37, 0x37, 0x37, 0x38, 0x38, 0x38, 0x38, 0x39, 0x39, 0x20, 0x7c, 0x20, 0x30, 0x36, 0x2f, 0x32, 0x34, 0x20, 0x7c, 0x20, 0x31, 0x32, 0x33})

}

func TestBinaryFile(t *testing.T) {
	filePath := "tst.txt"
	file, err := os.Create(filePath)
	assert.NoError(t, err)

	_, err = file.Write([]byte{0x31, 0x32, 0x33, 0x34, 0x35, 0x35, 0x35, 0x35, 0x36, 0x36, 0x36, 0x36, 0x37, 0x37, 0x37, 0x37, 0x38, 0x38, 0x38, 0x38, 0x39, 0x39, 0x20, 0x7c, 0x20, 0x30, 0x36, 0x2f, 0x32, 0x34, 0x20, 0x7c, 0x20, 0x31, 0x32, 0x33})
	assert.NoError(t, err)

	fileData := BinaryFile{
		FilePath: filePath,
		File:     file,
	}
	assert.NotEmpty(t, fileData)

	data, err := fileData.Bytes()
	assert.NoError(t, err)

	assert.Equal(t, data, []byte{0x31, 0x32, 0x33, 0x34, 0x35, 0x35, 0x35, 0x35, 0x36, 0x36, 0x36, 0x36, 0x37, 0x37, 0x37, 0x37, 0x38, 0x38, 0x38, 0x38, 0x39, 0x39, 0x20, 0x7c, 0x20, 0x30, 0x36, 0x2f, 0x32, 0x34, 0x20, 0x7c, 0x20, 0x31, 0x32, 0x33})

	fSize, err := fileData.Size()
	assert.NoError(t, err)

	assert.Equal(t, fSize, int64(36))

	os.Remove(filePath)
}

func TestRecordType(t *testing.T){
	var r RecordType = 1
	rString := r.String()
	assert.Equal(t, rString, "File")

	r = 2
	rString = r.String()
	assert.Equal(t, rString, "Text")

	r = 3
	rString = r.String()
	assert.Equal(t, rString, "Credit card")

	r = 4
	rString = r.String()
	assert.Equal(t, rString, "Unknown")

	r = 0
	rString = r.String()
	assert.Equal(t, rString, "Login & password")
}
